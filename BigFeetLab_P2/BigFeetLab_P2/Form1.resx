<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwABGT8AARk/AdIwr/kAAB9USURBVHhe7d3tcePcci5Ql3NwJieFU/7j3ycOp+CAnMcJ
        wkHcDK679bJliNMiKREEgcbqqlUaPTMS8UFiN4BNzr/8+3/+BwBwMm0IAMzWhgDAbG0IAMzWhgDAbG0I
        AMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDA
        bG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzW
        hgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0I
        AMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDA
        bG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzW
        hgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0I
        AMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDA
        bG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzW
        hgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0I
        AMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDA
        bG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzWhgDAbG0IAMzW
        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
        AGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBg
        tjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZr
        QwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYE
        AGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBg
        tjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZr
        QwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYE
        AGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBg
        tjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZr
        QwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYEAGZrQwBgtjYE
        ACb7j3/5X1NqAluK4uepAAAAAElFTkSuQmCC
</value>
  </data>
</root>